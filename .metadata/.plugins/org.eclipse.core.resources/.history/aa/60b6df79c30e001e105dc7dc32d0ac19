package Gui;

import entidades.Producto;
import javax.swing.*;
import javax.swing.table.DefaultTableModel;

import Dao.ProductoDAO;

import java.awt.*;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.util.List;

public class ProductoGUI extends JFrame {
    private ProductoDAO productoDAO;

    private JTextField txtCodigo;
    private JTextField txtNombre;
    private JTextField txtPrecio;
    private JButton btnRegistrar;
    private JButton btnEditar;
    private JButton btnEliminar;
    private JButton btnLimpiar;
    private JTable tablaProductos;
    private DefaultTableModel modeloTabla;

    public ProductoGUI() {
        productoDAO = new ProductoDAO(); // Reemplaza "ProductoDAO" con el nombre de tu clase DAO para la entidad Producto

        setTitle("Gestión de Productos");
 
        setSize(800, 400);
        setLocationRelativeTo(null);
        getContentPane().setLayout(new BorderLayout());

        JPanel panelFormulario = crearPanelFormulario();
        JPanel panelBotones = crearPanelBotones();
        JScrollPane panelTabla = crearPanelTabla();

        getContentPane().add(panelFormulario, BorderLayout.NORTH);
        getContentPane().add(panelBotones, BorderLayout.CENTER);
        getContentPane().add(panelTabla, BorderLayout.SOUTH);

        cargarDatosTabla();

        setVisible(true);
    }

    private JPanel crearPanelFormulario() {
        JPanel panel = new JPanel(new GridLayout(3, 2));
        panel.setBorder(BorderFactory.createEmptyBorder(10, 10, 10, 10));

        JLabel lblCodigo = new JLabel("Código:");
        JLabel lblNombre = new JLabel("Nombre:");
        JLabel lblPrecio = new JLabel("Precio:");

        txtCodigo = new JTextField();
        txtNombre = new JTextField();
        txtPrecio = new JTextField();

        panel.add(lblCodigo);
        panel.add(txtCodigo);
        panel.add(lblNombre);
        panel.add(txtNombre);
        panel.add(lblPrecio);
        panel.add(txtPrecio);

        return panel;
    }

    private JPanel crearPanelBotones() {
        JPanel panel = new JPanel();
        panel.setBorder(BorderFactory.createEmptyBorder(10, 10, 10, 10));

        btnRegistrar = new JButton("Registrar");
        btnRegistrar.setBounds(166, 15, 117, 23);
        btnEditar = new JButton("Editar");
        btnEditar.setBounds(293, 15, 114, 23);
        btnEliminar = new JButton("Eliminar");
        btnEliminar.setBounds(423, 15, 96, 23);
        btnLimpiar = new JButton("Limpiar");
        btnLimpiar.setBounds(529, 15, 106, 23);

        btnRegistrar.addActionListener(new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {
                registrarProducto();
            }
        });

        btnEditar.addActionListener(new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {
                editarProducto();
            }
        });

        btnEliminar.addActionListener(new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {
                eliminarProducto();
            }
        });

        btnLimpiar.addActionListener(new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {
                limpiarCampos();
            }
        });
        panel.setLayout(null);

        panel.add(btnRegistrar);
        panel.add(btnEditar);
        panel.add(btnEliminar);
        panel.add(btnLimpiar);

        return panel;
    }

    private JScrollPane crearPanelTabla() {
        modeloTabla = new DefaultTableModel();
        modeloTabla.addColumn("Código");
        modeloTabla.addColumn("Nombre");
        modeloTabla.addColumn("Precio");

        tablaProductos = new JTable(modeloTabla);
        tablaProductos.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);

        JScrollPane scrollPane = new JScrollPane(tablaProductos);
        scrollPane.setPreferredSize(new Dimension(700, 200));

        return scrollPane;
    }

    private void cargarDatosTabla() {
        List<Producto> productos = productoDAO.obtenerProductos();

        modeloTabla.setRowCount(0); // Limpiar filas existentes

        for (Producto producto : productos) {
            Object[] fila = {producto.getCodPro(), producto.getNomPro(), producto.getPrecioPro()};
            modeloTabla.addRow(fila);
        }
    }

    private void registrarProducto() {
    	try {
            String codigo = txtCodigo.getText();
            String nombre = txtNombre.getText();
            String precio = txtPrecio.getText();

            Producto producto = new Producto();
            producto.setCodPro(Integer.parseInt(codigo));
            producto.setNomPro(nombre);
            producto.setPrecioPro(Double.parseDouble(precio));

            productoDAO.insertarProducto(producto);
            JOptionPane.showMessageDialog(null, "Producto registrado correctamente.");
            limpiarCampos();
            cargarDatosTabla();
		} catch (Exception e) {
			JOptionPane.showMessageDialog(this, "No se puede Registrar Verique los campos", "Error", JOptionPane.ERROR_MESSAGE);
		}

    }

    private void editarProducto() {
        int filaSeleccionada = tablaProductos.getSelectedRow();

        if (filaSeleccionada != -1) {
            String codigo = txtCodigo.getText();
            String nombre = txtNombre.getText();
            String precio = txtPrecio.getText();

            int codigoProducto = (int) tablaProductos.getValueAt(filaSeleccionada, 0);

            Producto producto = new Producto();
            producto.setCodPro(codigoProducto);
            producto.setNomPro(nombre);
            producto.setPrecioPro(Double.parseDouble(precio));

            productoDAO.actualizarProducto(producto);
            JOptionPane.showMessageDialog(null, "Producto editado correctamente.");
            limpiarCampos();
            cargarDatosTabla();
        } else {
            JOptionPane.showMessageDialog(this, "Seleccione un producto de la tabla para editar.", "Error", JOptionPane.ERROR_MESSAGE);
        }
    }

    private void eliminarProducto() {
        int filaSeleccionada = tablaProductos.getSelectedRow();

        if (filaSeleccionada != -1) {
            int codigo = (int) tablaProductos.getValueAt(filaSeleccionada, 0);

            productoDAO.eliminarProducto(codigo);
            JOptionPane.showMessageDialog(null, "Producto eliminado correctamente.");
            limpiarCampos();
            cargarDatosTabla();
        } else {
            JOptionPane.showMessageDialog(this, "Seleccione un producto de la tabla para eliminar.", "Error", JOptionPane.ERROR_MESSAGE);
        }
    }

    private void limpiarCampos() {
        txtCodigo.setText("");
        txtNombre.setText("");
        txtPrecio.setText("");
        tablaProductos.clearSelection();
    }

    public static void main(String[] args) {
        SwingUtilities.invokeLater(new Runnable() {
            public void run() {
                new ProductoGUI();
            }
        });
    }
}

